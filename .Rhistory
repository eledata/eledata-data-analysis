summary(p)
p <- p + geom_point(aes(colour = factor(cyl)))
p
p <- p + geom_point(aes(y = disp))
p
p <- p + geom_point(aes(colour = "darkblue"))
p
q <- ggplot(0xboys, aes(age, height, group = Subject)) + geom_line()
q
library(nlme)
q <- ggplot(0xboys, aes(age, height, group = Subject)) + geom_line()
q
p <- ggplot(Oxboys, aes(age, height, group = Subject)) +
geom_line()
library(nlme)
q <- ggplot(Oxboys, aes(age, height, group = Subject)) + geom_line()
q
Oxboys
head(Oxboys)
q <- q + geom_smooth(aes(group = Subject), method = "lm", se = F)
q
library(nlme)
q <- ggplot(Oxboys, aes(age, height, group = Subject)) + geom_line()
q <- q + geom_smooth(aes(group = 1), method = "lm", size = 2, se = F)
q
boybox <- ggplot(Oxboys, aes(Occasion, height)) + geom_boxplot()
boybox
boybox <- boybox + geom_line(aes(group = Subject), colour = "#3366FF")
boybox
d <- ggplot(diamonds, aes(carat)) + xlim(0,3)
d1 <- d + stat_bin(aes(ymax = ..count..), binwidth = 0.1, geom = "area")
d1
d2 <- d + stat_bin(aes(size = ..density..), binwidth = 0.1, geom = "point", position = "identity")
d2
d3 <- d + stat_bin(aes(y = 1, fill = ..count..), binwidth = 0.1, geom = "title", position = "identity")
d3
d3 <- d + stat_bin(aes(y = 1, fill = ..count..), binwidth = 0.1, geom = "tile", position = "identity")
d3
d3 <- d + stat_bin(
aes(y = 1, fill = ..count..), binwidth = 0.1,
geom = "tile", position="identity")
d3
diamonds
head(diamonds)
d3 <- d + stat_bin(
aes(y, fill = ..count..), binwidth = 0.1,
geom = "tile", position="identity")
d3
d <- ggplot(diamonds, aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax = ..count..), binwidth = 0.1, geom = "area")
d <- ggplot(diamonds, aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax = ..count..), binwidth = 0.1, geom = "area")
d + stat_bin(aes(size = ..density..), binwidth = 0.1, geom = "point", position = "identity")
d + stat_bin(
aes(y, fill = ..count..), binwidth = 0.1,
geom = "tile", position="identity")
d <- ggplot(diamonds, aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax = ..count..), binwidth = 0.1, geom = "area")
d + stat_bin(aes(size = ..density..), binwidth = 0.1, geom = "point", position = "identity")
d + stat_bin(
aes(y = 1, fill = ..count..), binwidth = 0.1,
geom = "tile", position="identity")
d <- ggplot(diamonds, aes(carat)) + xlim(0,3)
d + stat_bin(aes(ymax = ..count..), binwidth = 0.1, geom = "area")
d + stat_bin(aes(size = ..density..), binwidth = 0.1, geom = "point", position = "identity")
d + stat_bin(
aes(y = 1, fill = ..count..), binwidth = 0.1,
geom = "tile", position="identity")
install.packages("maps")
librar(maps)
library(maps)
head(pop)
head(us.cities)
qplot(pop, data = us.cities, binwidth = 0000, geom = "histogram")
qplot(log(pop), data = us.cities, binwidth = 0.03, geom = "histogram")
USA.POP <- ggplot(us.cities, aes(x = long, y = lat)) + xlim(-130, -65) + borders("state", size=0.5)+
geom_point(aes(size = log(pop), color = factor(capital), alpha = 1/50))+
#对size标度的调整参考http://docs.ggplot2.org/0.9.3.1/scale_size.html
scale_size(range=c(0, 7), name = "log(City population)")+
#对离散型颜色变量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_manual.html
#对连续型颜色标量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_brewer.html
#和http://docs.ggplot2.org/0.9.3.1/scale_gradient2.html
scale_color_manual(values = c("black", "red"), labels = c("state capital", "city"))+
#调整图例
guides(color = guide_legend(title=NULL)) + scale_alpha(guide = FALSE)+
#绘制标题和坐标轴
labs(x = "longtitude", y = "latitude", title = "City Population in the United States")+
theme(plot.title = element_text(size=20))
library(maps)
library(ggplot2)
USA.POP <- ggplot(us.cities, aes(x = long, y = lat)) + xlim(-130, -65) + borders("state", size=0.5)+
geom_point(aes(size = log(pop), color = factor(capital), alpha = 1/50))+
#对size标度的调整参考http://docs.ggplot2.org/0.9.3.1/scale_size.html
scale_size(range=c(0, 7), name = "log(City population)")+
#对离散型颜色变量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_manual.html
#对连续型颜色标量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_brewer.html
#和http://docs.ggplot2.org/0.9.3.1/scale_gradient2.html
scale_color_manual(values = c("black", "red"), labels = c("state capital", "city"))+
#调整图例
guides(color = guide_legend(title=NULL)) + scale_alpha(guide = FALSE)+
#绘制标题和坐标轴
labs(x = "longtitude", y = "latitude", title = "City Population in the United States")+
theme(plot.title = element_text(size=20))
USA.POP
library(maps)
library(ggplot2)
USA.POP <- ggplot(us.cities, aes(x = long, y = lat)) + xlim(-130, -65) + borders("state", size=0.5)+
geom_point(aes(size = pop, color = factor(capital), alpha = 1/50))+
#对size标度的调整参考http://docs.ggplot2.org/0.9.3.1/scale_size.html
scale_size(range=c(0, 7), name = "log(City population)")+
#对离散型颜色变量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_manual.html
#对连续型颜色标量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_brewer.html
#和http://docs.ggplot2.org/0.9.3.1/scale_gradient2.html
scale_color_manual(values = c("black", "red"), labels = c("state capital", "city"))+
#调整图例
guides(color = guide_legend(title=NULL)) + scale_alpha(guide = FALSE)+
#绘制标题和坐标轴
labs(x = "longtitude", y = "latitude", title = "City Population in the United States")+
theme(plot.title = element_text(size=20))
USA.POP
#输出图像 并用cairo包进行抗锯齿处理
ggsave(USA.POP, file = "USA_POP.png", type = "cairo", width = 10, height = 6.75)
setwd("~/GitHub/eledata-data-analysis/R ggplot2")
library(maps)
library(ggplot2)
USA.POP <- ggplot(us.cities, aes(x = long, y = lat)) + xlim(-130, -65) + borders("state", size=0.5)+
geom_point(aes(size = pop, color = factor(capital), alpha = 1/50))+
#对size标度的调整参考http://docs.ggplot2.org/0.9.3.1/scale_size.html
scale_size(range=c(0, 7), name = "log(City population)")+
#对离散型颜色变量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_manual.html
#对连续型颜色标量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_brewer.html
#和http://docs.ggplot2.org/0.9.3.1/scale_gradient2.html
scale_color_manual(values = c("black", "red"), labels = c("state capital", "city"))+
#调整图例
guides(color = guide_legend(title=NULL)) + scale_alpha(guide = FALSE)+
#绘制标题和坐标轴
labs(x = "longtitude", y = "latitude", title = "City Population in the United States")+
theme(plot.title = element_text(size=20))
USA.POP
#输出图像 并用cairo包进行抗锯齿处理
ggsave(USA.POP, file = "USA_POP.png", type = "cairo", width = 10, height = 6.75)
library(maps)
library(ggplot2)
USA.POP <- ggplot(us.cities, aes(x = long, y = lat)) + xlim(-130, -65) + borders("state", size=0.5)+
geom_point(aes(size = log(pop), color = factor(capital), alpha = 1/50))+
#对size标度的调整参考http://docs.ggplot2.org/0.9.3.1/scale_size.html
scale_size(range=c(0, 7), name = "log(City population)")+
#对离散型颜色变量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_manual.html
#对连续型颜色标量的标度调整参考http://docs.ggplot2.org/0.9.3.1/scale_brewer.html
#和http://docs.ggplot2.org/0.9.3.1/scale_gradient2.html
scale_color_manual(values = c("black", "red"), labels = c("state capital", "city"))+
#调整图例
guides(color = guide_legend(title=NULL)) + scale_alpha(guide = FALSE)+
#绘制标题和坐标轴
labs(x = "longtitude", y = "latitude", title = "City Population in the United States")+
theme(plot.title = element_text(size=20))
USA.POP
#输出图像 并用cairo包进行抗锯齿处理
ggsave(USA.POP, file = "USA_POP.png", type = "cairo", width = 10, height = 6.75)
test.df <- data.frame(
x = c(3,1,5),
y = c(2,4,6),
label = c("a","b", "c")
)
test.p <- ggplot(df, aes(x,y)) + xlab(NULL) + ylab(NULL)
test.p + geom_point() + labs(title = "geom_point")
test.p + geom_bar(stat = "identity") + labs(title = "geom_bar(stat = \"identity\")")
test.p + geom_line() + labs(title = "geom_line")
test.p + geom_area() + labs(title = "geom_area")
test.p + geom_path() + labs(title = "geom_point")
test.p + geom_text(aes(label = label)) + labs(title = "geom_text")
test.p + geom_tile() + labs(title = "geom_tile")
test.p + geom_polygon() + labs(title = "geom_polygon")
test.df <- data.frame(
x = c(3,1,5),
y = c(2,4,6),
label = c("a","b", "c")
)
test.p <- ggplot(test.df, aes(x,y)) + xlab(NULL) + ylab(NULL)
test.p + geom_point() + labs(title = "geom_point")
test.p + geom_bar(stat = "identity") + labs(title = "geom_bar(stat = \"identity\")")
test.p + geom_line() + labs(title = "geom_line")
test.p + geom_area() + labs(title = "geom_area")
test.p + geom_path() + labs(title = "geom_point")
test.p + geom_text(aes(label = label)) + labs(title = "geom_text")
test.p + geom_tile() + labs(title = "geom_tile")
test.p + geom_polygon() + labs(title = "geom_polygon")
head(diamonds)
qplot(diamonds$depth)
qplot(diamonds$depth, bins = 1)
qplot(diamonds$depth, bins = 1000)
qplot(diamonds$depth, bins = 100)
qplot(diamonds$depth, bins = 500)
depth_dist <- ggplot(diamonds, aes(depth)) + xlim(58,68)
depth_dist + geom_histogram(aes(y = ..density..), binwidth = 0.1) + facet_grid(cut ~ .)
depth_dist + geom_histogram(aes(fill = cut), binwidth = 0.1, position = "fill")
depth_dist + geom_freqpoly(aes(y = ..density.., colour = cut), binwidth = 0.1)
depth_dist <- ggplot(diamonds, aes(depth)) + xlim(58,68)
depth_dist + geom_histogram(aes(y = ..density..), binwidth = 0.1) + facet_grid(cut ~ .)
depth_dist + geom_histogram(aes(fill = cut), binwidth = 0.1, position = "fill")
depth_dist + geom_freqpoly(aes(y = ..density.., colour = cut), binwidth = 0.1)
head(diamonds)
x = c(3,1,5),
depth_dist + geom_histogram(aes(y = ..density.., colour = cut), binwidth = 0.1) + facet_grid(cut ~ .)
qplot(class, cty, data = mpg, geom = "jitter")
library(plyr)
qplot(cut, depth, data = diamonds, geom = "boxplot")
qplot(carat, depth, data = diamonds, geom = "boxplot", group = round_any(carat, 0.1, floor), xlim = c(0,3))
qplot(depth, data=diamonds, geom="density", xlim = c(54, 70))
qplot(depth, data=diamonds, geom="density", xlim = c(54, 70),
fill = cut, alpha = I(0.2))
norm <- ggplot(test.data, aes(x,y))
norm + geom_point()
norm + geom_point(shape = 1)
norm + geom_point(shape = ".") # 点的大小为像素级别
test.data <- data.frame(
x = rnorm(2000),
y = rnorm(2000)
)
test.data
norm <- ggplot(test.data, aes(x,y))
norm + geom_point()
norm + geom_point(shape = 1)
norm + geom_point(shape = ".") # 点的大小为像素级别
norm + geom_point(colour = "black", alpha = 1/3)
norm + geom_point(colour = "black", alpha = 1/5)
norm + geom_point(colour = "black", alpha = 1/10)
td <- ggplot(diamonds, aes(table, depth)) +
xlim(50, 70) + ylim(50, 70)
td + geom_point()
td + geom_jitter()
jit <- position_jitter(width = 0.5)
td + geom_jitter(position = jit)
td + geom_jitter(position = jit, colour = alpha("black", 1/10))
td + geom_jitter(position = jit, colour = alpha("black", 1/50))
td + geom_jitter(position = jit, colour = alpha("black", 1/200))
t.test(22)
22/65
x <- c(14,22,24,16,18)
t.test(x)
y <- c(57,65,57,47,56)
t.test(y)
t.test(y,conf.level = 0.9)
y
t.test(x)
x
t.test(x,conf.level = 0.9)
z <- c(24.6,33.8,42.1,34,32.1)
t.test(z,conf.level = 0.9)
t.test(c(24.6),conf.level = 0.9)
qnorm(0.9,24.6,1)
qnorm(0.99,24.6,1)
qnorm(0.9,24.6,1)
z <- c(33.8,42.1,34,32.1)
t.test(z,conf.level = 0.9)
(33.8-24.6)/24.6
n <- c(33.8,42.1,34,32.1)
m <- c(24.6,33.8,42.1,34)
a <- n - m
a
t.test(a, conf.level = 0.9)
t.test(abs(a), conf.level = 0.9)
j <- c(0, 50,30,40.5)
k <- c(45,0,50,30)
jk <- j - k
t.test(abs(jk), conf.level = 0.9)
jk
t.test(jk, conf.level = 0.9)
h <- c(9,0,11,3,17)
t.test(h, conf.level = 0.9)
library(ggplot2)
plot <- qplot(cty, hwy, data = mpg)
plot
plot + aes(x = drv)
plot + aes(x = drv) + scale_x_discrete()
head(mpg)
plot <- qplot(cty, hwy, data = mpg)
plot
plot + aes(x = drv) + scale_x_discrete()
plot + aes(x = drv)
p <- qplot(sleep_total, sleep_cycle, data = msleep, colour = vore)
p
head(msleep)
head(msleep)
plot + aes(x = drv)
plot + aes(x = drv) + scale_x_discrete()
p <- qplot(sleep_total, sleep_cycle, data = msleep, colour = vore)
p
p + scale_colour_hue()
p + scale_colour_hue("What does\nit eat?",
breaks = c("herbi", "carni", "omni", NA),
labels = c("plants", "meat", "both", "don’t know"))
p <- qplot(sleep_total, sleep_cycle, data = msleep, colour = vore)
p
p + scale_colour_hue("What does\nit eat?",
breaks = c("herbi", "carni", "omni", NA),
labels = c("plants", "meat", "both", "don’t know"))
p + scale_colour_brewer(pal = "Set1")
p + scale_colour_hue()
p + scale_colour_hue("What does\nit eat?",
breaks = c("herbi", "carni", "omni", NA),
labels = c("plants", "meat", "both", "don’t know"))
p + scale_colour_brewer(palette = "Set1")
p <- qplot(cty, hwy, data = mpg, colour = displ)
p
p + scale_x_continuous("City mpg")
p + ylab("Highway mpg")
p + labs(x = "City mpg", y = "Highway", colour = "Displacement")
p + xlab(expression(frac(miles, gallon)))
p + scale_x_continuous("City mpg")
p <- qplot(cyl, wt, data = mtcars)
p
p + scale_x_continuous(breaks = c(5.5, 6.5))
p + scale_x_continuous(limits = c(5.5, 6.5))
p <- qplot(wt, cyl, data = mtcars, colour = cyl)
p
p + scale_colour_gradient(breaks = c(5.5, 6.5))
p + scale_colour_gradient(limits = c(5.5, 6.5))
p <- qplot(cyl, wt, data = mtcars)
p
p + scale_x_continuous(breaks = c(5.5, 6.5))
p + scale_x_continuous(limits = c(5.5, 6.5))
p <- qplot(wt, cyl, data = mtcars, colour = cyl)
p
p + scale_colour_gradient(breaks = c(5.5, 6.5))
p + scale_colour_gradient(limits = c(5.5, 6.5))
p <- qplot(cyl, wt, data = mtcars)
p
p + scale_x_continuous(breaks = c(5.5, 6.5))
p + scale_x_continuous(limits = c(5.5, 6.5))
p <- qplot(wt, cyl, data = mtcars, colour = cyl)
p
p + scale_colour_gradient(breaks = c(5.5, 6.5))
p + scale_colour_gradient(limits = c(5.5, 6.5))
qplot(log10(carat), log10(price), data = diamonds)
qplot(carat, price, data = diamonds) + scale_x_log10() + scale_y_log10()
qplot(carat, price, data = diamonds) +
scale_x_log10() + scale_y_log10()
plot <- qplot(date, psavert, data = economics, geom = "line") +
ylab("Personal savings rate") +
geom_hline(xintercept = 0, colour = "grey50")
plot
plot + scale_x_date(major = "10 years")
plot + scale_x_date(
limits = as.Date(c("2004-01-01", "2005-01-01")),
format = "%Y-%m-%d"
)
plot <- qplot(date, psavert, data = economics, geom = "line") +
ylab("Personal savings rate") +
geom_hline(xintercept = 0, colour = "grey50")
plot
plot <- qplot(date, psavert, data = economics, geom = "line")
plot
plot <- qplot(date, psavert, data = economics, geom = "line") +
ylab("Personal savings rate") +
geom_hline(xintercept = 0, colour = "grey50")
plot
plot <- qplot(date, psavert, data = economics, geom = "line") +
ylab("Personal savings rate") +
geom_hline(xintercept = 0, colour = "grey50")
plot
plot <- qplot(date, psavert, data = economics, geom = "line") +
ylab("Personal savings rate")
plot
plot + scale_x_date(major = "10 years")
plot + scale_x_date(
limits = as.Date(c("2004-01-01", "2005-01-01")),
format = "%Y-%m-%d"
)
library(maps)
plot <- qplot(date, psavert, data = economics, geom = "line") +
ylab("Personal savings rate") +
geom_hline(xintercept = "0", colour = "grey50")
plot
plot <- qplot(date, psavert, data = economics, geom = "line") + ylab("Personal savings rate") + geom_hline(xintercept = 1, colour = "grey50")
plot
plot <- qplot(date, psavert, data = economics, geom = "line") + ylab("Personal savings rate") + geom_hline(xintercept = 1, colour = "grey50")
plot
plot <- ggplot(data = economics, aes = (date, psavert)) + geom_line()
+ ylab("Personal savings rate") + geom_hline(xintercept = 0, colour = "grey50")
plot
plot <- ggplot(data = economics, aes(date, psavert)) + geom_line()
+ ylab("Personal savings rate") + geom_hline(xintercept = 0, colour = "grey50")
plot
plot <- ggplot(data = economics, aes(date, psavert)) + geom_line()
plot
plot <- ggplot(data = economics, aes(date, psavert)) + geom_line()
plot
plot <- ggplot(data = economics, aes(date, psavert)) + geom_line() + geom_hline(xintercept = 0, colour = "grey50")
plot
point <- qplot(brainwt, bodywt, data = msleep, log = "xy",
colour = vore)
area <- qplot(log10(brainwt), data = msleep, fill = vore,
binwidth = 1)
point + scale_colour_brewer(palette = "Set1")
point + scale_colour_brewer(palette = "Set2")
point + scale_colour_brewer(palette = "Pastel1")
area + scale_fill_brewer(palette = "Set1")
area + scale_fill_brewer(palette = "Set2")
area + scale_fill_brewer(palette = "Pastel1")
point <- qplot(brainwt, bodywt, data = msleep, log = "xy",
colour = vore)
area <- qplot(log10(brainwt), data = msleep, fill = vore,
binwidth = 1)
point + scale_colour_brewer(palette = "Set1")
point + scale_colour_brewer(palette = "Set2")
point + scale_colour_brewer(palette = "Pastel1")
area + scale_fill_brewer(palette = "Set1")
area + scale_fill_brewer(palette = "Set2")
area + scale_fill_brewer(palette = "Pastel1")
point <- qplot(brainwt, bodywt, data = msleep, log = "xy",
colour = vore)
area <- qplot(log10(brainwt), data = msleep, fill = vore,
binwidth = 1)
point + scale_colour_brewer(palette = "Set1")
point + scale_colour_brewer(palette = "Set2")
point + scale_colour_brewer(palette = "Pastel1")
area + scale_fill_brewer(palette = "Set1")
area + scale_fill_brewer(palette = "Set2")
area + scale_fill_brewer(palette = "Pastel1")
plot <- qplot(brainwt, bodywt, data = msleep, log = "xy")
plot + aes(colour = vore) +
scale_colour_manual(value = c("red", "orange", "yellow",
"green", "blue"))
colours <- c(carni = "red", "NA" = "orange", insecti = "yellow",herbi = "green", omni = "blue")
plot + aes(colour = vore) + scale_colour_manual(value = colours)
plot + aes(shape = vore) +
scale_shape_manual(value = c(1, 2, 6, 0, 23))
plot <- qplot(brainwt, bodywt, data = msleep, log = "xy")
plot + aes(colour = vore) +
scale_colour_manual(value = c("red", "orange", "yellow",
"green", "blue"))
plot + aes(colour = vore) +
scale_colour_manual(values = c("red", "orange", "yellow",
"green", "blue"))
colours <- c(carni = "red", "NA" = "orange", insecti = "yellow",herbi = "green", omni = "blue")
plot + aes(colour = vore) + scale_colour_manual(values = colours)
plot + aes(shape = vore) +
scale_shape_manual(values = c(1, 2, 6, 0, 23))
huron <- data.frame(year = 1875:1972, level = LakeHuron)
huron
ggplot(huron, aes(year)) + geom_line(aes(y = level - 5), colour = "blue") + geom_line(aes(y = level + 5), colour = "red")
ggplot(huron, aes(year)) + geom_line(aes(y = level - 5), colour = "blue") + geom_line(aes(y = level + 5), colour = "red") + scale_colour_manual("Direction", c("below" = "blue", "above" = "red"))
huron <- data.frame(year = 1875:1972, level = LakeHuron)
huron
ggplot(huron, aes(year)) +
geom_line(aes(y = level - 5), colour = "blue") +
geom_line(aes(y = level + 5), colour = "red") +
scale_colour_manual("Direction", c("below" = "blue", "above" = "red"))
huron <- data.frame(year = 1875:1972, level = LakeHuron)
huron
ggplot(huron, aes(year)) +
geom_line(aes(y = level - 5), colour = "blue") +
geom_line(aes(y = level + 5), colour = "red") +
scale_colour_manual("Direction", values = c("below" = "blue", "above" = "red"))
mpg2 <- subset(mpg, cyl != 5&drv %in% c("4","f"))
mpg2
head(mpgs)
head(mpg2)
head(mpg)
5&mpg2$drv %in% c("4","f")
5&mpg$drv %in% c("4","f")
mpg$drv %in% c("4","f")
mpg$drv
5&mpg$drv
5&mpg$drv %in% c("4","f")
mpg$drv %in% c("4","f")
head(mpg2)
qplot(cty, hwy, data = mpg2)
# 一行多列
qplot(cty, hwy, data = mpg2) + facet_grid(.~cyl)
# 一列多行
qplot(cty, hwy, data = mpg2) + facet_grid(cyl~.)
# 多行多列
qplot(cty, hwy, data = mpg2) + facet_grid(drv~cyl)
# 电影 10 年评分分布
movies$decade <- round_any(movies$year, 10, floor)
qplot(rating, ..density.., data=subset(movies, decade > 1890),
geom="histogram", binwidth = 0.5) +
facet_wrap(~ decade, ncol = 6)
library(maps)
library(ggplot2)
USA.POP <- ggplot(us.cities, aes(x = long, y = lat))
+ xlim(-130, -65)
+ borders("state", size=0.5)
+ geom_point(aes(size = log(pop), color = factor(capital), alpha = 1/50))
+ scale_size(range=c(0, 7), name = "log(City population)")
+ scale_color_manual(values = c("black", "red"), labels = c("state capital", "city"))
+ guides(color = guide_legend(title=NULL)) + scale_alpha(guide = FALSE)
+ labs(x = "longtitude", y = "latitude", title = "City Population in the United States")
+ theme(plot.title = element_text(size=20))
USA.POP
#输出图像 并用cairo包进行抗锯齿处理
ggsave(USA.POP, file = "USA_POP.png", type = "cairo", width = 10, height = 6.75)
library(format)
library(formatter)
library(formattable)
percent(rnorm(10, 0, 0.1))
library(maps)
library(ggplot2)
USA.POP <- ggplot(us.cities, aes(x = long, y = lat))
+ xlim(-130, -65)
+ borders("state", size=0.5)
+ geom_point(aes(size = log(pop), color = factor(capital), alpha = 1/50))
+ scale_size(range=c(0, 7), name = "log(City population)")
+ scale_color_manual(values = c("black", "red"), labels = c("state capital", "city"))
+ guides(color = guide_legend(title=NULL)) + scale_alpha(guide = FALSE)
+ labs(x = "longtitude", y = "latitude", title = "City Population in the United States")
+ theme(plot.title = element_text(size=20))
USA.POP
#输出图像 并用cairo包进行抗锯齿处理
ggsave(USA.POP, file = "USA_POP.png", type = "cairo", width = 10, height = 6.75)
